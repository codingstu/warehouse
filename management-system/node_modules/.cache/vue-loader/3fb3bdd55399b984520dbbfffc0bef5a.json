{"remainingRequest":"D:\\Study\\vue\\bishe\\warehouse-management-system\\management-system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Study\\vue\\bishe\\warehouse-management-system\\management-system\\src\\views\\PersonalCenter.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"D:\\Study\\vue\\bishe\\warehouse-management-system\\management-system\\src\\views\\PersonalCenter.vue","mtime":1646716328334},{"path":"D:\\Study\\vue\\bishe\\warehouse-management-system\\management-system\\node_modules\\css-loader\\dist\\cjs.js","mtime":1646716386465},{"path":"D:\\Study\\vue\\bishe\\warehouse-management-system\\management-system\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1646716386708},{"path":"D:\\Study\\vue\\bishe\\warehouse-management-system\\management-system\\node_modules\\postcss-loader\\src\\index.js","mtime":1624892018364},{"path":"D:\\Study\\vue\\bishe\\warehouse-management-system\\management-system\\node_modules\\less-loader\\dist\\cjs.js","mtime":1625989675222},{"path":"D:\\Study\\vue\\bishe\\warehouse-management-system\\management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624891997656},{"path":"D:\\Study\\vue\\bishe\\warehouse-management-system\\management-system\\node_modules\\vue-loader\\lib\\index.js","mtime":1646716386708}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5wZXJzb25hbCB7DQogIC5lbC1jYXJkX19ib2R5IHsNCiAgICB0ZXh0LWFsaWduOiBsZWZ0Ow0KICB9DQogIC5hdmF0YXItd3JhcCB7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgIC5hdmF0YXIgew0KICAgICAgd2lkdGg6IDEwMHB4Ow0KICAgICAgaGVpZ2h0OiAxMDBweDsNCiAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCiAgICAgIC5hdmF0YXItdXBsb2FkZXIgLmVsLXVwbG9hZCB7DQogICAgICAgIGJvcmRlcjogMXB4IGRhc2hlZCAjZDlkOWQ5Ow0KICAgICAgICBib3JkZXItcmFkaXVzOiA2cHg7DQogICAgICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOw0KICAgICAgICBvdmVyZmxvdzogaGlkZGVuOw0KICAgICAgfQ0KICAgICAgLmF2YXRhci11cGxvYWRlciAuZWwtdXBsb2FkOmhvdmVyIHsNCiAgICAgICAgYm9yZGVyLWNvbG9yOiAjNDA5ZWZmOw0KICAgICAgfQ0KICAgICAgLmF2YXRhci11cGxvYWRlci1pY29uIHsNCiAgICAgICAgZm9udC1zaXplOiAyOHB4Ow0KICAgICAgICBjb2xvcjogIzhjOTM5ZDsNCiAgICAgICAgd2lkdGg6IDEwMHB4Ow0KICAgICAgICBoZWlnaHQ6IDEwMHB4Ow0KICAgICAgICBsaW5lLWhlaWdodDogMTAwcHg7DQogICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgIH0NCiAgICAgIC5hdmF0YXIgew0KICAgICAgICB3aWR0aDogMTAwcHg7DQogICAgICAgIGhlaWdodDogMTAwcHg7DQogICAgICAgIGRpc3BsYXk6IGJsb2NrOw0KICAgICAgfQ0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["PersonalCenter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PersonalCenter.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"personal\">\r\n    <el-card class=\"box-card\">\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <span>管理员信息</span>\r\n      </div>\r\n      <div>\r\n        <div>\r\n          <span>管理员ID: {{ accountInfo.id }}</span>\r\n          <el-divider></el-divider>\r\n          <span>账号： {{ accountInfo.account }}</span>\r\n          <el-divider></el-divider>\r\n          <span>用户组： {{ accountInfo.userGroup }}</span>\r\n          <el-divider></el-divider>\r\n          <span>创建时间： {{ accountInfo.ctime | filterTime }}</span>\r\n          <el-divider></el-divider>\r\n          <div class=\"avatar-wrap\" style=\"height: 100px;\">\r\n            <span>管理员头像：</span>\r\n            <div style=\"margin-top: 20px;\" class=\"avatar\">\r\n              <!-- 管理员头像 -->\r\n              <el-upload\r\n                class=\"avatar-uploader\"\r\n                action=\"http://127.0.0.1:5000/account/upload\"\r\n                :show-file-list=\"false\"\r\n                :on-success=\"handleAvatarSuccess\"\r\n                :before-upload=\"beforeAvatarUpload\"\r\n              >\r\n                <img\r\n                  v-if=\"accountInfo.imgUrl\"\r\n                  :src=\"serveApi + accountInfo.imgUrl\"\r\n                  class=\"avatar\"\r\n                />\r\n                <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n              </el-upload>\r\n            </div>\r\n\r\n            <el-button\r\n              @click=\"editAvatar\"\r\n              style=\"margin-left: 30px; margin-top: 15px;\"\r\n              size=\"small\"\r\n              type=\"primary\"\r\n              >修改头像</el-button\r\n            >\r\n          </div>\r\n          <el-divider></el-divider>\r\n        </div>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 获取账号信息\r\nimport { getAccountInfo, editAvatarImg } from \"@/api/account\";\r\nimport moment from \"moment\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      serveApi: \"http://127.0.0.1:5000/upload/account/\",\r\n      accountInfo: {\r\n        id: \"\", // id\r\n        account: \"\", // 账号\r\n        userGroup: \"\", // 用户组\r\n        ctime: \"\", // 时间\r\n        imgUrl: \"\", // 图片地址\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    // 获取账号信息\r\n    async getAccountInfo() {\r\n      let { accountInfo } = await getAccountInfo();\r\n      this.accountInfo = accountInfo; // 赋值渲染\r\n    },\r\n    // 头像上传成功\r\n    handleAvatarSuccess(res) {\r\n      // 回填头像\r\n      let { code, imgUrl } = res;\r\n      if (code === 0) {\r\n        this.accountInfo.imgUrl = imgUrl;\r\n      }\r\n    },\r\n    // 头像上传之前限制\r\n    beforeAvatarUpload() {},\r\n    // 修改头像\r\n    async editAvatar() {\r\n      // 发送请求 修改头像\r\n      let { code } = await editAvatarImg({ imgUrl: this.accountInfo.imgUrl });\r\n\r\n      if (code === 0) {\r\n        // 发出通知更新头像\r\n        this.$bus.$emit(\"updateAvatar\");\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    // 获取用户信息\r\n    this.getAccountInfo();\r\n  },\r\n\r\n  filters: {\r\n    // 过滤时间\r\n    filterTime(time) {\r\n      return moment(time).format(\"YYYY-MM-DD HH:mm:ss\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.personal {\r\n  .el-card__body {\r\n    text-align: left;\r\n  }\r\n  .avatar-wrap {\r\n    display: flex;\r\n    align-items: center;\r\n    .avatar {\r\n      width: 100px;\r\n      height: 100px;\r\n      border-radius: 4px;\r\n      .avatar-uploader .el-upload {\r\n        border: 1px dashed #d9d9d9;\r\n        border-radius: 6px;\r\n        cursor: pointer;\r\n        position: relative;\r\n        overflow: hidden;\r\n      }\r\n      .avatar-uploader .el-upload:hover {\r\n        border-color: #409eff;\r\n      }\r\n      .avatar-uploader-icon {\r\n        font-size: 28px;\r\n        color: #8c939d;\r\n        width: 100px;\r\n        height: 100px;\r\n        line-height: 100px;\r\n        text-align: center;\r\n      }\r\n      .avatar {\r\n        width: 100px;\r\n        height: 100px;\r\n        display: block;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}