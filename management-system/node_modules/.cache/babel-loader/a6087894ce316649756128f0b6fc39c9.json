{"remainingRequest":"D:\\Study\\vue\\bishe\\warehouse-management-system\\management-system\\node_modules\\babel-loader\\lib\\index.js!D:\\Study\\vue\\bishe\\warehouse-management-system\\management-system\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Study\\vue\\bishe\\warehouse-management-system\\management-system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Study\\vue\\bishe\\warehouse-management-system\\management-system\\src\\views\\AccountManage\\ChangePassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Study\\vue\\bishe\\warehouse-management-system\\management-system\\src\\views\\AccountManage\\ChangePassword.vue","mtime":1646716328328},{"path":"D:\\Study\\vue\\bishe\\warehouse-management-system\\management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624891997656},{"path":"D:\\Study\\vue\\bishe\\warehouse-management-system\\management-system\\node_modules\\babel-loader\\lib\\index.js","mtime":1633574065756},{"path":"D:\\Study\\vue\\bishe\\warehouse-management-system\\management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624891997656},{"path":"D:\\Study\\vue\\bishe\\warehouse-management-system\\management-system\\node_modules\\vue-loader\\lib\\index.js","mtime":1646716386708}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRDpcXFN0dWR5XFx2dWVcXGJpc2hlXFx3YXJlaG91c2UtbWFuYWdlbWVudC1zeXN0ZW1cXG1hbmFnZW1lbnQtc3lzdGVtXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8g5byV5YWl6LCD55So5o6l5Y+j5Ye95pWwCmltcG9ydCB7IGNoZWNrT2xkUHdkLCBlZGl0UGFzc3dvcmQgfSBmcm9tICJAL2FwaS9hY2NvdW50IjsgLy8g5byV5YWl5bel5YW35Ye95pWwCgppbXBvcnQgeyBwd2RSZWcgfSBmcm9tICJAL3V0aWxzL3JlZyI7CmltcG9ydCBsb2NhbCBmcm9tICJAL3V0aWxzL3Nlc3Npb24iOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgLy8g5pen5a+G56CB6Ieq5a6a5LmJ6aqM6K+BCiAgICB2YXIgdmFsaWRhdGVPbGRQd2QgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShydWxlLCB2YWx1ZSwgY2FsbGJhY2spIHsKICAgICAgICB2YXIgX3lpZWxkJGNoZWNrT2xkUHdkLCBjb2RlLCBtc2c7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGNoZWNrT2xkUHdkKHsKICAgICAgICAgICAgICAgICAgb2xkUHdkOiB2YWx1ZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIF95aWVsZCRjaGVja09sZFB3ZCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBjb2RlID0gX3lpZWxkJGNoZWNrT2xkUHdkLmNvZGU7CiAgICAgICAgICAgICAgICBtc2cgPSBfeWllbGQkY2hlY2tPbGRQd2QubXNnOwoKICAgICAgICAgICAgICAgIGlmICghdmFsdWUpIHsKICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCLor7fovpPlhaXljp/lr4bnoIEiKSk7CiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGNvZGUgPT09ICIxMSIpIHsKICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKG1zZykpOyAvLyDml6flr4bnoIHplJnor68KICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCk7IC8vIOaIkOWKnwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpOwoKICAgICAgcmV0dXJuIGZ1bmN0aW9uIHZhbGlkYXRlT2xkUHdkKF94LCBfeDIsIF94MykgewogICAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH07CiAgICB9KCk7IC8vIOaWsOeahOWvhueggeiHquWumuS5iemqjOivgQoKCiAgICB2YXIgdmFsaWRhdGVOZXdQd2QgPSBmdW5jdGlvbiB2YWxpZGF0ZU5ld1B3ZChydWxlLCB2YWx1ZSwgY2FsbGJhY2spIHsKICAgICAgaWYgKCF2YWx1ZSkgewogICAgICAgIGNhbGxiYWNrKG5ldyBFcnJvcigi6K+36L6T5YWl5paw5a+G56CBIikpOwogICAgICB9IGVsc2UgaWYgKHZhbHVlID09PSBfdGhpcy5wYXNzd29yZE1vZGlmeUZvcm0ub2xkUHdkKSB7CiAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCLkuI3og73lkozljp/lr4bnoIHnm7jlkIwiKSk7CiAgICAgIH0gZWxzZSBpZiAoIXJ1bGUucGF0dGVybi50ZXN0KHZhbHVlKSkgewogICAgICAgIGNhbGxiYWNrKG5ldyBFcnJvcigi5a+G56CB55Sx5pWw5a2X5ZKM5a2X5q+N57uE5oiQ77yM6ZW/5bqmNi0xMuS9jSIpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICAvLyDlpoLmnpznoa7orqTmlrDlr4bnoIHkuI3kuLrnqboKICAgICAgICBpZiAoX3RoaXMucGFzc3dvcmRNb2RpZnlGb3JtLmNoZWNrUGFzcyAhPT0gIiIpIHsKICAgICAgICAgIF90aGlzLiRyZWZzLnBhc3N3b3JkTW9kaWZ5Rm9ybS52YWxpZGF0ZUZpZWxkKCJjaGVja1Bhc3MiKTsgLy8g5YaN5qyh6Kem5Y+R5p+Q5Liq4oCc5a2X5q614oCd55qE6aqM6K+BCgogICAgICAgIH0KCiAgICAgICAgY2FsbGJhY2soKTsKICAgICAgfQogICAgfTsgLy8g6aqM6K+B56Gu6K6k5paw5a+G56CBCgoKICAgIHZhciB2YWxpZGF0ZUNoZWNrUGFzcyA9IGZ1bmN0aW9uIHZhbGlkYXRlQ2hlY2tQYXNzKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgewogICAgICBpZiAoIXZhbHVlKSB7CiAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCLor7flho3mrKHovpPlhaXmlrDlr4bnoIEiKSk7CiAgICAgIH0gZWxzZSBpZiAodmFsdWUgIT09IF90aGlzLnBhc3N3b3JkTW9kaWZ5Rm9ybS5uZXdQd2QpIHsKICAgICAgICBjYWxsYmFjayhuZXcgRXJyb3IoIuS4pOasoeWvhueggeS4jeS4gOiHtCIpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjYWxsYmFjaygpOwogICAgICB9CiAgICB9OwoKICAgIHJldHVybiB7CiAgICAgIC8vIOihqOWNleaVsOaNrgogICAgICBwYXNzd29yZE1vZGlmeUZvcm06IHsKICAgICAgICBvbGRQd2Q6ICIiLAogICAgICAgIG5ld1B3ZDogIiIsCiAgICAgICAgY2hlY2tQYXNzOiAiIgogICAgICB9LAogICAgICAvLyDpqozor4Hop4TliJkKICAgICAgcnVsZXM6IHsKICAgICAgICBvbGRQd2Q6IHsKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgdmFsaWRhdG9yOiB2YWxpZGF0ZU9sZFB3ZCwKICAgICAgICAgIHRyaWdnZXI6ICJibHVyIgogICAgICAgIH0sCiAgICAgICAgLy8g5pen5a+G56CB6aqM6K+BCiAgICAgICAgLy8g5paw5a+G56CB6aqM6K+BCiAgICAgICAgbmV3UHdkOiB7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIHBhdHRlcm46IHB3ZFJlZygpLAogICAgICAgICAgdmFsaWRhdG9yOiB2YWxpZGF0ZU5ld1B3ZCwKICAgICAgICAgIHRyaWdnZXI6ICJibHVyIgogICAgICAgIH0sCiAgICAgICAgLy8g6aqM6K+B56Gu6K6k5paw5a+G56CBCiAgICAgICAgY2hlY2tQYXNzOiB7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIHZhbGlkYXRvcjogdmFsaWRhdGVDaGVja1Bhc3MsCiAgICAgICAgICB0cmlnZ2VyOiAiYmx1ciIKICAgICAgICB9IC8vIOaXp+WvhueggemqjOivgQoKICAgICAgfQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOihqOWNleaPkOS6pAogICAgc3VibWl0Rm9ybTogZnVuY3Rpb24gc3VibWl0Rm9ybSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICAvLyDpgInkuK3mlbTkuKrooajljZUg6Kem5Y+R5omA5pyJ6aqM6K+BIOWmguaenOmDvemAmui/hyB2YWxpZOWwseaYr3RydWUg5ZCm5YiZ5bCx5pivZmFsc2UKICAgICAgdGhpcy4kcmVmcy5wYXNzd29yZE1vZGlmeUZvcm0udmFsaWRhdGUoIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIF9yZWYyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMih2YWxpZCkgewogICAgICAgICAgdmFyIF95aWVsZCRlZGl0UGFzc3dvcmQsIGNvZGU7CgogICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgaWYgKCF2YWxpZCkgewogICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gODsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgICByZXR1cm4gZWRpdFBhc3N3b3JkKHsKICAgICAgICAgICAgICAgICAgICBuZXdQd2Q6IF90aGlzMi5wYXNzd29yZE1vZGlmeUZvcm0ubmV3UHdkCiAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgICAgX3lpZWxkJGVkaXRQYXNzd29yZCA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgICBjb2RlID0gX3lpZWxkJGVkaXRQYXNzd29yZC5jb2RlOwoKICAgICAgICAgICAgICAgICAgaWYgKGNvZGUgPT09IDApIHsKICAgICAgICAgICAgICAgICAgICAvLyDmuIXpmaR0b2tlbgogICAgICAgICAgICAgICAgICAgIGxvY2FsLnJlbW92ZSgidG9rZW4iKTsgLy8g6Lez6L2s5Yiw55m75b2V6aG16Z2iCgogICAgICAgICAgICAgICAgICAgIF90aGlzMi4kcm91dGVyLnB1c2goIi9sb2dpbiIpOwogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDk7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIGZhbHNlKTsKCiAgICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgICB9KSk7CgogICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3g0KSB7CiAgICAgICAgICByZXR1cm4gX3JlZjIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICB9OwogICAgICB9KCkpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["ChangePassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA;AACA,SAAA,WAAA,EAAA,YAAA,QAAA,eAAA,C,CACA;;AACA,SAAA,MAAA,QAAA,aAAA;AACA,OAAA,KAAA,MAAA,iBAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AAAA;;AACA;AACA,QAAA,cAAA;AAAA,yEAAA,iBAAA,IAAA,EAAA,KAAA,EAAA,QAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,WAAA,CAAA;AAAA,kBAAA,MAAA,EAAA;AAAA,iBAAA,CAFA;;AAAA;AAAA;AAEA,gBAAA,IAFA,sBAEA,IAFA;AAEA,gBAAA,GAFA,sBAEA,GAFA;;AAIA,oBAAA,CAAA,KAAA,EAAA;AACA,kBAAA,QAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA;AACA,iBAFA,MAEA,IAAA,IAAA,KAAA,IAAA,EAAA;AACA,kBAAA,QAAA,CAAA,IAAA,KAAA,CAAA,GAAA,CAAA,CAAA,CADA,CACA;AACA,iBAFA,MAEA;AACA,kBAAA,QAAA,GADA,CACA;AACA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA,sBAAA,cAAA;AAAA;AAAA;AAAA,OAAA,CAFA,CAeA;;;AACA,QAAA,cAAA,GAAA,SAAA,cAAA,CAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA;AACA,UAAA,CAAA,KAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA;AACA,OAFA,MAEA,IAAA,KAAA,KAAA,KAAA,CAAA,kBAAA,CAAA,MAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,KAAA,CAAA,UAAA,CAAA,CAAA;AACA,OAFA,MAEA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,KAAA,CAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,KAAA,CAAA,oBAAA,CAAA,CAAA;AACA,OAFA,MAEA;AACA;AACA,YAAA,KAAA,CAAA,kBAAA,CAAA,SAAA,KAAA,EAAA,EAAA;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,kBAAA,CAAA,aAAA,CAAA,WAAA,EADA,CACA;;AACA;;AACA,QAAA,QAAA;AACA;AACA,KAdA,CAhBA,CAgCA;;;AACA,QAAA,iBAAA,GAAA,SAAA,iBAAA,CAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA;AACA,UAAA,CAAA,KAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,KAAA,CAAA,UAAA,CAAA,CAAA;AACA,OAFA,MAEA,IAAA,KAAA,KAAA,KAAA,CAAA,kBAAA,CAAA,MAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,KAAA,CAAA,SAAA,CAAA,CAAA;AACA,OAFA,MAEA;AACA,QAAA,QAAA;AACA;AACA,KARA;;AAUA,WAAA;AACA;AACA,MAAA,kBAAA,EAAA;AACA,QAAA,MAAA,EAAA,EADA;AAEA,QAAA,MAAA,EAAA,EAFA;AAGA,QAAA,SAAA,EAAA;AAHA,OAFA;AAOA;AACA,MAAA,KAAA,EAAA;AACA,QAAA,MAAA,EAAA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,SAAA,EAAA,cAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA;AACA;AACA;AACA,QAAA,MAAA,EAAA;AACA,UAAA,QAAA,EAAA,IADA;AAEA,UAAA,OAAA,EAAA,MAAA,EAFA;AAGA,UAAA,SAAA,EAAA,cAHA;AAIA,UAAA,OAAA,EAAA;AAJA,SAHA;AASA;AACA,QAAA,SAAA,EAAA;AACA,UAAA,QAAA,EAAA,IADA;AAEA,UAAA,SAAA,EAAA,iBAFA;AAGA,UAAA,OAAA,EAAA;AAHA,SAVA,CAcA;;AAdA;AARA,KAAA;AAyBA,GArEA;AAsEA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,UAFA,wBAEA;AAAA;;AACA;AACA,WAAA,KAAA,CAAA,kBAAA,CAAA,QAAA;AAAA,4EAAA,kBAAA,KAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KADA;AAAA;AAAA;AAAA;;AAAA;AAAA,yBAEA,YAAA,CAAA;AACA,oBAAA,MAAA,EAAA,MAAA,CAAA,kBAAA,CAAA;AADA,mBAAA,CAFA;;AAAA;AAAA;AAEA,kBAAA,IAFA,uBAEA,IAFA;;AAMA,sBAAA,IAAA,KAAA,CAAA,EAAA;AACA;AACA,oBAAA,KAAA,CAAA,MAAA,CAAA,OAAA,EAFA,CAGA;;AACA,oBAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AACA;;AAXA;AAAA;;AAAA;AAAA,oDAaA,KAbA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAA;;AAAA;AAAA;AAAA;AAAA;AAgBA;AApBA;AAtEA,CAAA","sourcesContent":["<template>\r\n  <div class=\"password-modify\">\r\n    <el-card class=\"box-card\">\r\n      <!-- 面板头部 -->\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <span>账号添加</span>\r\n      </div>\r\n      <!-- 表单 -->\r\n      <div>\r\n        <el-form\r\n          style=\"width: 315px;\"\r\n          size=\"small\"\r\n          status-icon\r\n          ref=\"passwordModifyForm\"\r\n          label-width=\"100px\"\r\n          :model=\"passwordModifyForm\"\r\n          :rules=\"rules\"\r\n        >\r\n          <!-- 旧密码 -->\r\n          <el-form-item label=\"旧的密码\" prop=\"oldPwd\">\r\n            <el-input\r\n              v-model=\"passwordModifyForm.oldPwd\"\r\n              type=\"text\"\r\n              autocomplete=\"off\"\r\n            ></el-input>\r\n          </el-form-item>\r\n\r\n          <!-- 新密码 -->\r\n          <el-form-item label=\"新的密码\" prop=\"newPwd\">\r\n            <el-input\r\n              v-model=\"passwordModifyForm.newPwd\"\r\n              type=\"text\"\r\n              autocomplete=\"off\"\r\n            ></el-input>\r\n          </el-form-item>\r\n\r\n          <!-- 确认新密码 -->\r\n          <el-form-item label=\"确认新密码\" prop=\"checkPass\">\r\n            <el-input\r\n              v-model=\"passwordModifyForm.checkPass\"\r\n              type=\"text\"\r\n              autocomplete=\"off\"\r\n            ></el-input>\r\n          </el-form-item>\r\n\r\n          <!-- 提交按钮 -->\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"submitForm\">提交</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 引入调用接口函数\r\nimport { checkOldPwd, editPassword } from \"@/api/account\";\r\n// 引入工具函数\r\nimport { pwdReg } from \"@/utils/reg\";\r\nimport local from \"@/utils/session\";\r\n\r\nexport default {\r\n  data() {\r\n    // 旧密码自定义验证\r\n    const validateOldPwd = async (rule, value, callback) => {\r\n      // 发送请求 验证旧密码是否正确\r\n      let { code, msg } = await checkOldPwd({ oldPwd: value });\r\n\r\n      if (!value) {\r\n        callback(new Error(\"请输入原密码\"));\r\n      } else if (code === \"11\") {\r\n        callback(new Error(msg)); // 旧密码错误\r\n      } else {\r\n        callback(); // 成功\r\n      }\r\n    };\r\n\r\n    // 新的密码自定义验证\r\n    const validateNewPwd = (rule, value, callback) => {\r\n      if (!value) {\r\n        callback(new Error(\"请输入新密码\"));\r\n      } else if (value === this.passwordModifyForm.oldPwd) {\r\n        callback(new Error(\"不能和原密码相同\"));\r\n      } else if (!rule.pattern.test(value)) {\r\n        callback(new Error(\"密码由数字和字母组成，长度6-12位\"));\r\n      } else {\r\n        // 如果确认新密码不为空\r\n        if (this.passwordModifyForm.checkPass !== \"\") {\r\n          this.$refs.passwordModifyForm.validateField(\"checkPass\"); // 再次触发某个“字段”的验证\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n\r\n    // 验证确认新密码\r\n    const validateCheckPass = (rule, value, callback) => {\r\n      if (!value) {\r\n        callback(new Error(\"请再次输入新密码\"));\r\n      } else if (value !== this.passwordModifyForm.newPwd) {\r\n        callback(new Error(\"两次密码不一致\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n\r\n    return {\r\n      // 表单数据\r\n      passwordModifyForm: {\r\n        oldPwd: \"\",\r\n        newPwd: \"\",\r\n        checkPass: \"\",\r\n      },\r\n      // 验证规则\r\n      rules: {\r\n        oldPwd: { required: true, validator: validateOldPwd, trigger: \"blur\" }, // 旧密码验证\r\n        // 新密码验证\r\n        newPwd: {\r\n          required: true,\r\n          pattern: pwdReg(),\r\n          validator: validateNewPwd,\r\n          trigger: \"blur\",\r\n        },\r\n        // 验证确认新密码\r\n        checkPass: {\r\n          required: true,\r\n          validator: validateCheckPass,\r\n          trigger: \"blur\",\r\n        }, // 旧密码验证\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    // 表单提交\r\n    submitForm() {\r\n      // 选中整个表单 触发所有验证 如果都通过 valid就是true 否则就是false\r\n      this.$refs.passwordModifyForm.validate(async (valid) => {\r\n        if (valid) {\r\n          let { code } = await editPassword({\r\n            newPwd: this.passwordModifyForm.newPwd,\r\n          });\r\n\r\n          if (code === 0) {\r\n            // 清除token\r\n            local.remove(\"token\");\r\n            // 跳转到登录页面\r\n            this.$router.push(\"/login\");\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped></style>\r\n"],"sourceRoot":"src/views/AccountManage"}]}